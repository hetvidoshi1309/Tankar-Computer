{"ast":null,"code":"var _jsxFileName = \"/Users/parthsavajadiya/Desktop/tankar-computer/src/components/Navbar/Navbar_Page.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport ScrollspyNav from \"./scrollSpy\"; //Import Images\n\nimport logolight from \"../../assets/images/logo-light.png\";\nimport logodark from \"../../assets/images/logo-dark.png\";\n\nclass NavbarPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [{\n        id: 1,\n        idnm: \"home\",\n        navheading: \"Home\"\n      }, {\n        id: 2,\n        idnm: \"features\",\n        navheading: \"Features\"\n      }, {\n        id: 3,\n        idnm: \"service\",\n        navheading: \"Services\"\n      }, {\n        id: 4,\n        idnm: \"client\",\n        navheading: \"Main Focus\"\n      }, {\n        id: 5,\n        idnm: \"team\",\n        navheading: \"Team\"\n      }, // { id: 6, idnm: \"pricing\", navheading: \"Pricing\" },\n      {\n        id: 7,\n        idnm: \"contact\",\n        navheading: \"Contact\"\n      }],\n      isOpen: false\n    };\n    this.toggleLine = this.toggleLine.bind(this);\n  }\n\n  toggleLine() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  render() {\n    //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\n    let targetId = this.state.navItems.map(item => {\n      return item.idnm;\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"topnav\",\n      className: this.props.isNotSticky === true ? \"defaultscroll sticky \" + this.props.navclass : \"defaultscroll fixed-top sticky \" + this.props.navclass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"logo text-uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, this.props.imglight === true ? /*#__PURE__*/React.createElement(\"img\", {\n      src: logolight,\n      alt: \"\",\n      className: \"logo-light\",\n      height: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: logodark,\n      alt: \"\",\n      className: \"logo-dark\",\n      height: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-extras\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      onClick: this.toggleLine,\n      className: this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(ScrollspyNav, {\n      scrollTargetIds: targetId,\n      scrollDuration: \"300\",\n      headerBackground: \"false\",\n      activeNavClass: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navigation\",\n      style: {\n        display: this.state.isOpen ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navigation-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.state.navItems.map((item, key) => /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      className: item.navheading === \"Home\" ? \"active\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\" + item.idnm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, \" \", item.navheading)))))))));\n  }\n\n}\n\nexport default NavbarPage;","map":{"version":3,"sources":["/Users/parthsavajadiya/Desktop/tankar-computer/src/components/Navbar/Navbar_Page.js"],"names":["React","Component","Container","Link","ScrollspyNav","logolight","logodark","NavbarPage","constructor","props","state","navItems","id","idnm","navheading","isOpen","toggleLine","bind","setState","prevState","render","targetId","map","item","isNotSticky","navclass","imglight","display","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,aAAzB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,MAAf;AAAuBC,QAAAA,UAAU,EAAE;AAAnC,OADQ,EAER;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,UAAf;AAA2BC,QAAAA,UAAU,EAAE;AAAvC,OAFQ,EAGR;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,UAAU,EAAE;AAAtC,OAHQ,EAIR;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,QAAf;AAAyBC,QAAAA,UAAU,EAAE;AAArC,OAJQ,EAKR;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,MAAf;AAAuBC,QAAAA,UAAU,EAAE;AAAnC,OALQ,EAMR;AACA;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,UAAU,EAAE;AAAtC,OAPQ,CADC;AAUXC,MAAAA,MAAM,EAAE;AAVG,KAAb;AAYA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,SAAKE,QAAL,CAAeC,SAAD,KAAgB;AAAEJ,MAAAA,MAAM,EAAE,CAACI,SAAS,CAACJ;AAArB,KAAhB,CAAd;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,QAAQ,GAAG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAyBC,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAACV,IAAZ;AACD,KAFc,CAAf;AAGA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,SAAS,EACP,KAAKJ,KAAL,CAAWe,WAAX,KAA2B,IAA3B,GACI,0BAA0B,KAAKf,KAAL,CAAWgB,QADzC,GAEI,oCAAoC,KAAKhB,KAAL,CAAWgB,QALvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,qBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWiB,QAAX,KAAwB,IAAxB,gBACC;AACE,MAAA,GAAG,EAAErB,SADP;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,MAAM,EAAC,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAQC;AACE,MAAA,GAAG,EAAEC,QADP;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,MAAM,EAAC,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF,CADF,eAoBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,OAAO,EAAE,KAAKU,UAFhB;AAGE,MAAA,SAAS,EACP,KAAKN,KAAL,CAAWK,MAAX,GAAoB,oBAApB,GAA2C,eAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAPF,CADF,CADF,CApBF,eAqCE,oBAAC,YAAD;AACE,MAAA,eAAe,EAAEM,QADnB;AAEE,MAAA,cAAc,EAAC,KAFjB;AAGE,MAAA,gBAAgB,EAAC,OAHnB;AAIE,MAAA,cAAc,EAAC,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWK,MAAX,GAAoB,OAApB,GAA8B;AAAzC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,CAACC,IAAD,EAAOK,GAAP,kBACvB;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,SAAS,EAAEL,IAAI,CAACT,UAAL,KAAoB,MAApB,GAA6B,QAA7B,GAAwC,EAFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAG,MAAA,IAAI,EAAE,MAAMS,IAAI,CAACV,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4BU,IAAI,CAACT,UAAjC,CAJF,CADD,CADH,CAJF,CANF,CArCF,CARF,CADF,CADF;AAyED;;AApGgC;;AAuGnC,eAAeP,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ScrollspyNav from \"./scrollSpy\";\r\n\r\n//Import Images\r\nimport logolight from \"../../assets/images/logo-light.png\";\r\nimport logodark from \"../../assets/images/logo-dark.png\";\r\n\r\nclass NavbarPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navItems: [\r\n        { id: 1, idnm: \"home\", navheading: \"Home\" },\r\n        { id: 2, idnm: \"features\", navheading: \"Features\" },\r\n        { id: 3, idnm: \"service\", navheading: \"Services\" },\r\n        { id: 4, idnm: \"client\", navheading: \"Main Focus\" },\r\n        { id: 5, idnm: \"team\", navheading: \"Team\" },\r\n        // { id: 6, idnm: \"pricing\", navheading: \"Pricing\" },\r\n        { id: 7, idnm: \"contact\", navheading: \"Contact\" },\r\n      ],\r\n      isOpen: false,\r\n    };\r\n    this.toggleLine = this.toggleLine.bind(this);\r\n  }\r\n\r\n  toggleLine() {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  }\r\n\r\n  render() {\r\n    //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\r\n    let targetId = this.state.navItems.map((item) => {\r\n      return item.idnm;\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <header\r\n          id=\"topnav\"\r\n          className={\r\n            this.props.isNotSticky === true\r\n              ? \"defaultscroll sticky \" + this.props.navclass\r\n              : \"defaultscroll fixed-top sticky \" + this.props.navclass\r\n          }\r\n        >\r\n          <Container>\r\n            <div>\r\n              <Link to=\"/\" className=\"logo text-uppercase\">\r\n                {this.props.imglight === true ? (\r\n                  <img\r\n                    src={logolight}\r\n                    alt=\"\"\r\n                    className=\"logo-light\"\r\n                    height=\"50\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={logodark}\r\n                    alt=\"\"\r\n                    className=\"logo-dark\"\r\n                    height=\"50\"\r\n                  />\r\n                )}\r\n              </Link>\r\n            </div>\r\n            <div className=\"menu-extras\">\r\n              <div className=\"menu-item\">\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={this.toggleLine}\r\n                  className={\r\n                    this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\"\r\n                  }\r\n                >\r\n                  <div className=\"lines\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <ScrollspyNav\r\n              scrollTargetIds={targetId}\r\n              scrollDuration=\"300\"\r\n              headerBackground=\"false\"\r\n              activeNavClass=\"active\"\r\n            >\r\n              <div\r\n                id=\"navigation\"\r\n                style={{ display: this.state.isOpen ? \"block\" : \"none\" }}\r\n              >\r\n                <ul className=\"navigation-menu\">\r\n                  {this.state.navItems.map((item, key) => (\r\n                    <li\r\n                      key={key}\r\n                      className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                    >\r\n                      <a href={\"#\" + item.idnm}> {item.navheading}</a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </ScrollspyNav>\r\n          </Container>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;\r\n"]},"metadata":{},"sourceType":"module"}